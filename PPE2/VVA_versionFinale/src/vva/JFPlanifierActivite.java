/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vva;

import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Time;
import java.time.LocalTime;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Fanilo
 */
public class JFPlanifierActivite extends javax.swing.JFrame {

    /**
     * Creates new form DefinirActivite
     */
    private static Compte compte;
    private ArrayList<TypeAnim> type;
    private static javax.swing.JFrame pagePrecedente;
    
    DonneesAnimation managerAnimation;
    public JFPlanifierActivite(Compte c, javax.swing.JFrame pagePrcdt) throws SQLException {
        initComponents();
        
        this.pagePrecedente = pagePrcdt;   
        this.compte = c;
        
        managerAnimation = new DonneesAnimation();
        type = managerAnimation.getTypeAnim();
        
        for(TypeAnim s : type)
        {
            jCBCat.addItem(s);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFLib = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTFDesc = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jBEnregistrer = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jCBCat = new javax.swing.JComboBox<TypeAnim>();
        jPCheckboxes = new javax.swing.JPanel();
        CBLundi = new javax.swing.JCheckBox();
        CBMardi = new javax.swing.JCheckBox();
        CBMercredi = new javax.swing.JCheckBox();
        CBJeudi = new javax.swing.JCheckBox();
        CBVendredi = new javax.swing.JCheckBox();
        CBSamedi = new javax.swing.JCheckBox();
        CBDimanche = new javax.swing.JCheckBox();
        jLabel19 = new javax.swing.JLabel();
        jTFLmtInsc = new javax.swing.JTextField();
        jpHorairesDebut = new javax.swing.JPanel();
        jCMardiDebut = new javax.swing.JComboBox<String>();
        jCJeudiDebut = new javax.swing.JComboBox<String>();
        jCDimancheDebut = new javax.swing.JComboBox<String>();
        jCSamediDebut = new javax.swing.JComboBox<String>();
        jCLundiDebut = new javax.swing.JComboBox<String>();
        jCMercrediDebut = new javax.swing.JComboBox<String>();
        jCVendrediDebut = new javax.swing.JComboBox<String>();
        jpHorairesFin = new javax.swing.JPanel();
        jCMardiFin = new javax.swing.JComboBox<String>();
        jCJeudiFin = new javax.swing.JComboBox<String>();
        jCDimancheFin = new javax.swing.JComboBox<String>();
        jCSamediFin = new javax.swing.JComboBox<String>();
        jCLundiFin = new javax.swing.JComboBox<String>();
        jCMercrediFin = new javax.swing.JComboBox<String>();
        jCVendrediFin = new javax.swing.JComboBox<String>();
        jCBRetour = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(698, 500));

        jLabel1.setText("Libellé :");

        jTFLib.setText("jTextField1");
        jTFLib.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFLibActionPerformed(evt);
            }
        });

        jLabel2.setText("Description :");

        jTFDesc.setColumns(20);
        jTFDesc.setRows(5);
        jScrollPane1.setViewportView(jTFDesc);

        jLabel3.setText("Jour(s) :");

        jBEnregistrer.setText("Enregistrer");
        jBEnregistrer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEnregistrerActionPerformed(evt);
            }
        });

        jLabel18.setText("Catégorie:");

        jCBCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCatActionPerformed(evt);
            }
        });

        CBLundi.setText("Lundi");
        CBLundi.setIconTextGap(8);
        CBLundi.setInheritsPopupMenu(true);
        CBLundi.setNextFocusableComponent(CBMardi);
        CBLundi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBLundiActionPerformed(evt);
            }
        });

        CBMardi.setText("Mardi");
        CBMardi.setIconTextGap(8);
        CBMardi.setInheritsPopupMenu(true);
        CBMardi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMardiActionPerformed(evt);
            }
        });

        CBMercredi.setText("Mercredi");
        CBMercredi.setIconTextGap(8);
        CBMercredi.setInheritsPopupMenu(true);
        CBMercredi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBMercrediActionPerformed(evt);
            }
        });

        CBJeudi.setText("Jeudi");
        CBJeudi.setIconTextGap(8);
        CBJeudi.setInheritsPopupMenu(true);
        CBJeudi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBJeudiActionPerformed(evt);
            }
        });

        CBVendredi.setText("Vendredi");
        CBVendredi.setIconTextGap(8);
        CBVendredi.setInheritsPopupMenu(true);
        CBVendredi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBVendrediActionPerformed(evt);
            }
        });

        CBSamedi.setText("Samedi");
        CBSamedi.setIconTextGap(8);
        CBSamedi.setInheritsPopupMenu(true);
        CBSamedi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBSamediActionPerformed(evt);
            }
        });

        CBDimanche.setText("Dimanche");
        CBDimanche.setIconTextGap(8);
        CBDimanche.setInheritsPopupMenu(true);
        CBDimanche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBDimancheActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPCheckboxesLayout = new javax.swing.GroupLayout(jPCheckboxes);
        jPCheckboxes.setLayout(jPCheckboxesLayout);
        jPCheckboxesLayout.setHorizontalGroup(
            jPCheckboxesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCheckboxesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPCheckboxesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPCheckboxesLayout.createSequentialGroup()
                        .addComponent(CBLundi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(CBMardi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBMercredi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBJeudi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBVendredi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBSamedi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CBDimanche, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)))
        );
        jPCheckboxesLayout.setVerticalGroup(
            jPCheckboxesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPCheckboxesLayout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(CBLundi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBMardi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBMercredi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBJeudi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBVendredi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBSamedi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CBDimanche)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel19.setText("Limite Inscription: ");

        jTFLmtInsc.setText("jTextField1");
        jTFLmtInsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFLmtInscActionPerformed(evt);
            }
        });

        jCMardiDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCMardiDebut.setEnabled(false);

        jCJeudiDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCJeudiDebut.setEnabled(false);

        jCDimancheDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCDimancheDebut.setEnabled(false);

        jCSamediDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCSamediDebut.setEnabled(false);

        jCLundiDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCLundiDebut.setEnabled(false);

        jCMercrediDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCMercrediDebut.setEnabled(false);

        jCVendrediDebut.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCVendrediDebut.setEnabled(false);

        javax.swing.GroupLayout jpHorairesDebutLayout = new javax.swing.GroupLayout(jpHorairesDebut);
        jpHorairesDebut.setLayout(jpHorairesDebutLayout);
        jpHorairesDebutLayout.setHorizontalGroup(
            jpHorairesDebutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHorairesDebutLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpHorairesDebutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCLundiDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCMardiDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCMercrediDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCJeudiDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCVendrediDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCSamediDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCDimancheDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpHorairesDebutLayout.setVerticalGroup(
            jpHorairesDebutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHorairesDebutLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCLundiDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCMardiDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCMercrediDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCJeudiDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCVendrediDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCSamediDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCDimancheDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jCMardiFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCMardiFin.setEnabled(false);

        jCJeudiFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCJeudiFin.setEnabled(false);

        jCDimancheFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCDimancheFin.setEnabled(false);

        jCSamediFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCSamediFin.setEnabled(false);

        jCLundiFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCLundiFin.setEnabled(false);

        jCMercrediFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCMercrediFin.setEnabled(false);

        jCVendrediFin.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "06:30:00", "07:00:00", "07:30:00", "08:00:00", "08:30:00", "09:00:00", "09:30:00", "10:00:00", "10:30:00", "11:00:00", "11:30:00", "12:00:00", "12:30:00", "13:00:00", "13:30:00", "14:00:00", "15:30:00", "16:30:00", "17:00:00", "17:30:00", "18:00:00", "18:30:00", "19:00:00", "19:30:00", "20:00:00", "20:30:00", "21:00:00", "21:30:00", "22:00:00", "22:30:00", "23:00:00" }));
        jCVendrediFin.setEnabled(false);

        javax.swing.GroupLayout jpHorairesFinLayout = new javax.swing.GroupLayout(jpHorairesFin);
        jpHorairesFin.setLayout(jpHorairesFinLayout);
        jpHorairesFinLayout.setHorizontalGroup(
            jpHorairesFinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHorairesFinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpHorairesFinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCLundiFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCMardiFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCMercrediFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCJeudiFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCVendrediFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCSamediFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCDimancheFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jpHorairesFinLayout.setVerticalGroup(
            jpHorairesFinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpHorairesFinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCLundiFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCMardiFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCMercrediFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCJeudiFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCVendrediFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCSamediFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCDimancheFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jCBRetour.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Menu", "Page précédente" }));
        jCBRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBRetourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel3))
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCBCat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPCheckboxes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(66, 66, 66)
                                                        .addComponent(jBEnregistrer))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addGap(57, 57, 57)
                                                        .addComponent(jpHorairesDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(41, 41, 41)
                                                        .addComponent(jpHorairesFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
                                            .addComponent(jTFLib, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE))
                                        .addGap(0, 14, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(jTFLmtInsc)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(jCBRetour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2});

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jTFLib});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTFLib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jCBRetour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jCBCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTFLmtInsc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPCheckboxes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(22, 22, 22))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jpHorairesDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jpHorairesFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jBEnregistrer))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTFLibActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFLibActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFLibActionPerformed

    private void jBEnregistrerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEnregistrerActionPerformed
        TypeAnim tA = (TypeAnim) jCBCat.getSelectedItem();
        int idTypeAnim = tA.getId();
        String libelle = jTFLib.getText();
        String desc = jTFDesc.getText();
        ArrayList<String> jour = new ArrayList<String>();
        ArrayList<Time> arrayHorairesDébut = new ArrayList<Time>();
        ArrayList<Time> arrayHorairesFin = new ArrayList<Time>();
        int idCompte = compte.getId();
        int limiteInsc = Integer.parseInt(jTFLmtInsc.getText());
        
        boolean erreur = true;
        for(int i = 0; i < jPCheckboxes.getComponentCount(); i++)
        {
            if(jPCheckboxes.getComponent(i) instanceof JCheckBox )
            {
                JCheckBox c = (JCheckBox)jPCheckboxes.getComponent(i);
                if(c.isSelected())
                {
                    if(jpHorairesDebut.getComponent(i) instanceof JComboBox)
                    {       
                        if(jpHorairesFin.getComponent(i) instanceof JComboBox)
                        {
                            JComboBox jcHd = (JComboBox)jpHorairesDebut.getComponent(i); 
                            JComboBox jcFn = (JComboBox)jpHorairesFin.getComponent(i); 
                            
                            String strHD = (String)jcHd.getSelectedItem();
                            String strHF = (String)jcFn.getSelectedItem();
                            
                            Time hD = Time.valueOf(strHD);
                            Time hF = Time.valueOf(strHF);
                            
                            if(ControleValidite.horaireFinEstSuperieure(hD, hF))
                            {
                                erreur = false;
                                
                                jour.add(c.getText());  
                                
                                arrayHorairesFin.add(hF); 
                                arrayHorairesDébut.add(hD);               
                            }
                            
                        }
                    }
                }
            }
            
        }
        if(erreur == false)
        {
            Animation a = new Activite(jour, arrayHorairesDébut,arrayHorairesFin, idCompte, idTypeAnim, libelle, desc, limiteInsc);
            managerAnimation.enregistrerAnimation(a);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Erreur de saisies Format (F) \n Heure fin inférieur à heure de début (S)");
        }
        
    }//GEN-LAST:event_jBEnregistrerActionPerformed

    private void jCBCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCatActionPerformed
        
    }//GEN-LAST:event_jCBCatActionPerformed

    private void CBMardiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMardiActionPerformed
        if(jCMardiDebut.isEnabled() == false && jCMardiFin.isEnabled() == false)
        {
            jCMardiDebut.setEnabled(true);
            jCMardiFin.setEnabled(true);
            
        }
        else
        {
            jCMardiDebut.setEnabled(false);
            jCMardiFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBMardiActionPerformed

    private void CBMercrediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBMercrediActionPerformed
        if(jCMercrediDebut.isEnabled() == false && jCMercrediFin.isEnabled() == false)
        {
            jCMercrediDebut.setEnabled(true);
            jCMercrediFin.setEnabled(true);
        }
        else
        {
            jCMercrediDebut.setEnabled(false);
            jCMercrediFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBMercrediActionPerformed

    private void CBJeudiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBJeudiActionPerformed
        if(jCJeudiDebut.isEnabled() == false && jCJeudiFin.isEnabled() == false)
        {
            jCJeudiDebut.setEnabled(true);
            jCJeudiFin.setEnabled(true);
        }
        else
        {
            jCJeudiDebut.setEnabled(false);
            jCJeudiFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBJeudiActionPerformed

    private void CBLundiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBLundiActionPerformed
        if(jCLundiDebut.isEnabled() == false && jCLundiFin.isEnabled() == false)
        {
            jCLundiDebut.setEnabled(true);
            jCLundiFin.setEnabled(true);
        }
        else
        {
            jCLundiDebut.setEnabled(false);
            jCLundiFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBLundiActionPerformed

    private void CBVendrediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBVendrediActionPerformed
        if(jCVendrediDebut.isEnabled() == false && jCVendrediFin.isEnabled() == false)
        {
            jCVendrediDebut.setEnabled(true);
            jCVendrediFin.setEnabled(true);
        }
        else
        {
            jCVendrediDebut.setEnabled(false);
            jCVendrediFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBVendrediActionPerformed

    private void CBDimancheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBDimancheActionPerformed
        if(jCDimancheDebut.isEnabled() == false && jCDimancheFin.isEnabled() == false)
        {
            jCDimancheDebut.setEnabled(true);
            jCDimancheFin.setEnabled(true);
        }
        else
        {
            jCDimancheDebut.setEnabled(false);
            jCDimancheFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBDimancheActionPerformed

    private void CBSamediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBSamediActionPerformed
        if(jCSamediDebut.isEnabled() == false && jCSamediFin.isEnabled() == false)
        {
            jCSamediDebut.setEnabled(true);
            jCSamediFin.setEnabled(true);
        }
        else
        {
            jCSamediDebut.setEnabled(false);
            jCSamediFin.setEnabled(false);
        }
    }//GEN-LAST:event_CBSamediActionPerformed

    private void jTFLmtInscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFLmtInscActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFLmtInscActionPerformed

    private void jCBRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBRetourActionPerformed
        if(jCBRetour.getSelectedItem() == "Page précédente")
        {
            this.pagePrecedente.setLocationRelativeTo(null);
            this.pagePrecedente.setVisible(true);
            this.dispose();
        }
        else
        {
            JFMenu jFM = new JFMenu(compte);
            jFM.setLocationRelativeTo(null);
            jFM.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jCBRetourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPlanifierActivite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPlanifierActivite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPlanifierActivite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPlanifierActivite.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFPlanifierActivite(compte, pagePrecedente).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(JFPlanifierActivite.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CBDimanche;
    private javax.swing.JCheckBox CBJeudi;
    private javax.swing.JCheckBox CBLundi;
    private javax.swing.JCheckBox CBMardi;
    private javax.swing.JCheckBox CBMercredi;
    private javax.swing.JCheckBox CBSamedi;
    private javax.swing.JCheckBox CBVendredi;
    private javax.swing.JButton jBEnregistrer;
    private javax.swing.JComboBox<TypeAnim> jCBCat;
    private javax.swing.JComboBox<String> jCBRetour;
    private javax.swing.JComboBox<String> jCDimancheDebut;
    private javax.swing.JComboBox<String> jCDimancheFin;
    private javax.swing.JComboBox<String> jCJeudiDebut;
    private javax.swing.JComboBox<String> jCJeudiFin;
    private javax.swing.JComboBox<String> jCLundiDebut;
    private javax.swing.JComboBox<String> jCLundiFin;
    private javax.swing.JComboBox<String> jCMardiDebut;
    private javax.swing.JComboBox<String> jCMardiFin;
    private javax.swing.JComboBox<String> jCMercrediDebut;
    private javax.swing.JComboBox<String> jCMercrediFin;
    private javax.swing.JComboBox<String> jCSamediDebut;
    private javax.swing.JComboBox<String> jCSamediFin;
    private javax.swing.JComboBox<String> jCVendrediDebut;
    private javax.swing.JComboBox<String> jCVendrediFin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPCheckboxes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTFDesc;
    private javax.swing.JTextField jTFLib;
    private javax.swing.JTextField jTFLmtInsc;
    private javax.swing.JPanel jpHorairesDebut;
    private javax.swing.JPanel jpHorairesFin;
    // End of variables declaration//GEN-END:variables
}
