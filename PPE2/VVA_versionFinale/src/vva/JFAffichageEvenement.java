/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vva;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author Fanilo
 */
public class JFAffichageEvenement extends javax.swing.JFrame {

    private DonneesAnimation SQLManager;
    private Connection conn;
    private ArrayList<Evenement> arrayEvenements;
    private DefaultListModel<Evenement> modelEvenement;
    private static Compte compte;
    private static javax.swing.JFrame pagePrecedente;
    public JFAffichageEvenement(Compte c, javax.swing.JFrame pagePrcdt) throws SQLException {
        initComponents();
        
        this.pagePrecedente = pagePrcdt;        
        this.compte = c;
        
        conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/vva2", "root", "");
        
        SQLManager = new DonneesAnimation();
        
        arrayEvenements = SQLManager.chargerEvenement();
        
        modelEvenement = new DefaultListModel<Evenement>();
        
        jlEvenements.setModel(modelEvenement);
        
        for(Evenement e: arrayEvenements)
        {
            modelEvenement.addElement(e);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jlEvenements = new javax.swing.JList<>();
        jlbLibelleEvenement = new javax.swing.JLabel();
        jlbNombreInscrits = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jlbLimiteInscrits = new javax.swing.JLabel();
        jlbDescription = new javax.swing.JLabel();
        jbtInscrire = new javax.swing.JButton();
        jbtDesinscrire = new javax.swing.JButton();
        jlbDate = new javax.swing.JLabel();
        jCBRetour = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jlEvenements.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jlEvenementsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jlEvenements);

        jlbLibelleEvenement.setText("jLabel1");

        jlbNombreInscrits.setText("jLabel2");

        jLabel3.setText("/");

        jlbLimiteInscrits.setText("jLabel4");

        jlbDescription.setText("jLabel5");

        jbtInscrire.setText("S'inscrire");
        jbtInscrire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtInscrireActionPerformed(evt);
            }
        });

        jbtDesinscrire.setText("Se désinscrire");
        jbtDesinscrire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDesinscrireActionPerformed(evt);
            }
        });

        jlbDate.setText("jLabel1");

        jCBRetour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Menu", "Page précédente" }));
        jCBRetour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBRetourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtInscrire, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtDesinscrire))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbLibelleEvenement)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                        .addComponent(jCBRetour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlbDescription)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbNombreInscrits)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbLimiteInscrits))
                    .addComponent(jlbDate))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbLibelleEvenement)
                            .addComponent(jCBRetour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbNombreInscrits)
                            .addComponent(jLabel3)
                            .addComponent(jlbLimiteInscrits))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbDate)
                        .addGap(26, 26, 26)
                        .addComponent(jlbDescription))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 136, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtInscrire)
                    .addComponent(jbtDesinscrire))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jlEvenementsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jlEvenementsValueChanged
        Evenement e = jlEvenements.getSelectedValue();
        
        jlbLibelleEvenement.setText(e.getLibelle());
        
        jlbDescription.setText(e.getDescription());
        
        jlbNombreInscrits.setText(String.valueOf(e.getNombreInscrit()));
        
        jlbLimiteInscrits.setText(String.valueOf(e.getLimiteInscrit()));
        
        jlbDate.setText(String.valueOf(e.getDate()));
        
    }//GEN-LAST:event_jlEvenementsValueChanged

    private void jbtInscrireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtInscrireActionPerformed
        try {
            Evenement e = jlEvenements.getSelectedValue();
            
            SQLManager.ajouterUnInscrit(e.getLibelle(), compte.getId());
            
            int nombreInscrits = Integer.parseInt(jlbNombreInscrits.getText());
            
            int nombreInscritsIncrement = nombreInscrits + 1;
            
            jlbNombreInscrits.setText(String.valueOf(nombreInscritsIncrement));
            
            jbtInscrire.setEnabled(false);
            
            jbtDesinscrire.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(JFAffichageEvenement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtInscrireActionPerformed

    private void jbtDesinscrireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDesinscrireActionPerformed
        try {
            
            Evenement e = jlEvenements.getSelectedValue();
            
            SQLManager.supprimerUnInscrit(e.getLibelle(), compte.getId());
            
            int nombreInscrits = Integer.parseInt(jlbNombreInscrits.getText());
            
            int nombreInscritsDecrement = nombreInscrits - 1;
            
            jbtInscrire.setEnabled(true);
            
            jbtDesinscrire.setEnabled(false);
            
        } catch (SQLException ex) {
            Logger.getLogger(JFAffichageEvenement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtDesinscrireActionPerformed

    private void jCBRetourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBRetourActionPerformed
        if(jCBRetour.getSelectedItem() == "Page précédente")
        {
            this.pagePrecedente.setLocationRelativeTo(null);
            this.pagePrecedente.setVisible(true);
            this.dispose();
        }
        else
        {
            JFMenu jFM = new JFMenu(compte);
            jFM.setLocationRelativeTo(null);
            jFM.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jCBRetourActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFAffichageEvenement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFAffichageEvenement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFAffichageEvenement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFAffichageEvenement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFAffichageEvenement(compte, pagePrecedente).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(JFAffichageEvenement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> jCBRetour;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtDesinscrire;
    private javax.swing.JButton jbtInscrire;
    private javax.swing.JList<Evenement> jlEvenements;
    private javax.swing.JLabel jlbDate;
    private javax.swing.JLabel jlbDescription;
    private javax.swing.JLabel jlbLibelleEvenement;
    private javax.swing.JLabel jlbLimiteInscrits;
    private javax.swing.JLabel jlbNombreInscrits;
    // End of variables declaration//GEN-END:variables
}
